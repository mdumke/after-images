{"mappings":"AAEA,MAAMA,EAAQC,SAASC,cAAc,eAC/BC,EAASF,SAASC,cAAc,WAChCE,EAASH,SAASC,cAAc,WAChCG,EAAU,CACdC,IAAKL,SAASC,cAAc,QAC5BK,MAAON,SAASC,cAAc,UAC9BM,KAAMP,SAASC,cAAc,SAC7BO,OAAQR,SAASC,cAAc,YAGpBQ,EAAeC,IAC1BX,EAAMY,YAAcD,CAAA,EAQTE,EAAYC,IACvBX,EAAOY,MAAMC,gBAAkBF,EAC/BV,EAAOW,MAAMC,gBAAkB,QAGpBC,EAAiBH,IAC5BI,OAAOC,KAAKd,GAASe,SAAQC,IAC3BhB,EAAQgB,GAAcC,UAAUC,OAAO,eAEzClB,EAAQS,GAAOQ,UAAUE,IAAI,aC1B/B,MAAMC,EAAQ,ICJd,MACEC,QAAU,EACVC,MAAQ,EAERC,MAAOC,EAAcC,GAKnB,OAJAC,KAAKC,OACLD,KAAKL,QAAUG,EACfC,EAAGD,GAEI,IAAII,SAAQC,IACjBH,KAAKJ,MAAQQ,aAAY,KACvBJ,KAAKL,UACgB,IAAjBK,KAAKL,UACPK,KAAKC,OACLE,KAEFJ,EAAGC,KAAKL,QAAO,GACd,OAEP,CAEAM,OACEI,cAAcL,KAAKJ,MACrB,GDjBIU,EAAgBC,gBACdb,EAAMG,MAAM,IAAIW,IACpB7B,EAAY6B,EAAEC,WAAQ,IAExB9B,EAAY,eDOZP,EAAOY,MAAMC,gBAAkB,OAC/BZ,EAAOW,MAAMC,gBAAkB,MCPlB,EAGTyB,EAAS3B,GAAiB,KAC9BD,EAASC,GACTG,EAAcH,EAAA,EAehBb,SAASyC,iBAAiB,oBAJb,KAPXzC,SAASC,cAAc,WAAWwC,iBAAiB,QAASL,GAC5DpC,SAASC,cAAc,SAASwC,iBAAiB,QAASD,EAAM,QAChExC,SAASC,cAAc,WAAWwC,iBAAiB,QAASD,EAAM,UAClExC,SAASC,cAAc,UAAUwC,iBAAiB,QAASD,EAAM,SACjExC,SAASC,cAAc,YAAYwC,iBAAiB,QAASD,EAAM,UAInE,GAGkD,CAAEE,MAAM","sources":["src/display.ts","src/index.ts","src/timer.ts"],"sourcesContent":["import { Color } from './types'\n\nconst timer = document.querySelector('#timer-text') as HTMLDivElement\nconst screen = document.querySelector('#screen') as HTMLDivElement\nconst square = document.querySelector('#square') as HTMLDivElement\nconst patches = {\n  red: document.querySelector('#red') as HTMLDivElement,\n  green: document.querySelector('#green') as HTMLDivElement,\n  blue: document.querySelector('#blue') as HTMLDivElement,\n  yellow: document.querySelector('#yellow') as HTMLDivElement\n}\n\nexport const updateTimer = (text: string) => {\n  timer.textContent = text\n}\n\nexport const showWhiteField = () => {\n  screen.style.backgroundColor = '#fff'\n  square.style.backgroundColor = '#fff'\n}\n\nexport const setColor = (color: Color) => {\n  screen.style.backgroundColor = color\n  square.style.backgroundColor = '#ccc'\n}\n\nexport const markSelection = (color: Color) => {\n  Object.keys(patches).forEach(key => {\n    patches[key as Color].classList.remove('selected')\n  })\n  patches[color].classList.add('selected')\n}\n","import { updateTimer, setColor, showWhiteField, markSelection } from './display'\nimport { Timer } from './timer'\nimport { Color } from './types'\n\nconst timer = new Timer()\n\nconst runExperiment = async () => {\n  await timer.start(30, n => {\n    updateTimer(n.toString())\n  })\n  updateTimer('Start Timer')\n  showWhiteField()\n}\n\nconst reset = (color: Color) => () => {\n  setColor(color)\n  markSelection(color)\n}\n\nconst registerListeners = () => {\n  document.querySelector('#timer')?.addEventListener('click', runExperiment)\n  document.querySelector('#red')?.addEventListener('click', reset('red'))\n  document.querySelector('#green')?.addEventListener('click', reset('green'))\n  document.querySelector('#blue')?.addEventListener('click', reset('blue'))\n  document.querySelector('#yellow')?.addEventListener('click', reset('yellow'))\n}\n\nconst main = () => {\n  registerListeners()\n}\n\ndocument.addEventListener('DOMContentLoaded', main, { once: true })\n","class Timer {\n  counter = 0\n  timer = 0\n\n  start (secs: number, cb: (i: number) => void): Promise<void> {\n    this.stop()\n    this.counter = secs\n    cb(secs)\n\n    return new Promise(resolve => {\n      this.timer = setInterval(() => {\n        this.counter--\n        if (this.counter === 0) {\n          this.stop()\n          resolve()\n        }\n        cb(this.counter)\n      }, 1000)\n    })\n  }\n\n  stop () {\n    clearInterval(this.timer)\n  }\n}\n\nexport { Timer }\n"],"names":["$807e0c5767c3952e$var$timer","document","querySelector","$807e0c5767c3952e$var$screen","$807e0c5767c3952e$var$square","$807e0c5767c3952e$var$patches","red","green","blue","yellow","$807e0c5767c3952e$export$6467bd9f4ef23cb9","text","textContent","$807e0c5767c3952e$export$130a5dc1bc9cd8e1","color","style","backgroundColor","$807e0c5767c3952e$export$3ba48467d3728463","Object","keys","forEach","key","classList","remove","add","$b4e14b6b8da86996$var$timer","counter","timer","start","secs","cb","this","stop","Promise","resolve","setInterval","clearInterval","$b4e14b6b8da86996$var$runExperiment","async","n","toString","$b4e14b6b8da86996$var$reset","addEventListener","once"],"version":3,"file":"index.e7edaa93.js.map"}